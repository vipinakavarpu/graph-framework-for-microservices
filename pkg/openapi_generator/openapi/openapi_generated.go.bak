//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Intentionally left empty

// Code generated by nexus-openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package openapi

import (
	common "gitlab.eng.vmware.com/nsx-allspark_users/nexus-sdk/kube-openapi.git/pkg/common"
	spec "gitlab.eng.vmware.com/nsx-allspark_users/nexus-sdk/kube-openapi.git/pkg/validation/spec"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"nexustempmodule/apis/apix.mazinger.com/v1.Child":                                 schema_nexustempmodule_apis_apixmazingercom_v1_Child(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.Config":                                schema_nexustempmodule_apis_apixmazingercom_v1_Config(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.ConfigNexusStatus":                     schema_nexustempmodule_apis_apixmazingercom_v1_ConfigNexusStatus(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.ConfigSpec":                            schema_nexustempmodule_apis_apixmazingercom_v1_ConfigSpec(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.Inventory":                             schema_nexustempmodule_apis_apixmazingercom_v1_Inventory(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.InventoryNexusStatus":                  schema_nexustempmodule_apis_apixmazingercom_v1_InventoryNexusStatus(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.InventorySpec":                         schema_nexustempmodule_apis_apixmazingercom_v1_InventorySpec(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.Link":                                  schema_nexustempmodule_apis_apixmazingercom_v1_Link(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus":                           schema_nexustempmodule_apis_apixmazingercom_v1_NexusStatus(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.Project":                               schema_nexustempmodule_apis_apixmazingercom_v1_Project(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.ProjectNexusStatus":                    schema_nexustempmodule_apis_apixmazingercom_v1_ProjectNexusStatus(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.ProjectSpec":                           schema_nexustempmodule_apis_apixmazingercom_v1_ProjectSpec(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.Root":                                  schema_nexustempmodule_apis_apixmazingercom_v1_Root(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.RootNexusStatus":                       schema_nexustempmodule_apis_apixmazingercom_v1_RootNexusStatus(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.RootSpec":                              schema_nexustempmodule_apis_apixmazingercom_v1_RootSpec(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.Runtime":                               schema_nexustempmodule_apis_apixmazingercom_v1_Runtime(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.RuntimeNexusStatus":                    schema_nexustempmodule_apis_apixmazingercom_v1_RuntimeNexusStatus(ref),
		"nexustempmodule/apis/apix.mazinger.com/v1.RuntimeSpec":                           schema_nexustempmodule_apis_apixmazingercom_v1_RuntimeSpec(ref),
		"nexustempmodule/apis/common.mazinger.com/v1.Child":                               schema_nexustempmodule_apis_commonmazingercom_v1_Child(ref),
		"nexustempmodule/apis/common.mazinger.com/v1.Header":                              schema_nexustempmodule_apis_commonmazingercom_v1_Header(ref),
		"nexustempmodule/apis/common.mazinger.com/v1.Link":                                schema_nexustempmodule_apis_commonmazingercom_v1_Link(ref),
		"nexustempmodule/apis/common.mazinger.com/v1.Listener":                            schema_nexustempmodule_apis_commonmazingercom_v1_Listener(ref),
		"nexustempmodule/apis/common.mazinger.com/v1.NexusStatus":                         schema_nexustempmodule_apis_commonmazingercom_v1_NexusStatus(ref),
		"nexustempmodule/apis/common.mazinger.com/v1.Path":                                schema_nexustempmodule_apis_commonmazingercom_v1_Path(ref),
		"nexustempmodule/apis/common.mazinger.com/v1.Route":                               schema_nexustempmodule_apis_commonmazingercom_v1_Route(ref),
		"nexustempmodule/apis/common.mazinger.com/v1.Target":                              schema_nexustempmodule_apis_commonmazingercom_v1_Target(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.Adapter":                             schema_nexustempmodule_apis_configmazingercom_v1_Adapter(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.AdapterNexusStatus":                  schema_nexustempmodule_apis_configmazingercom_v1_AdapterNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.AdapterSpec":                         schema_nexustempmodule_apis_configmazingercom_v1_AdapterSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.AdapterVersion":                      schema_nexustempmodule_apis_configmazingercom_v1_AdapterVersion(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.AdapterVersionNexusStatus":           schema_nexustempmodule_apis_configmazingercom_v1_AdapterVersionNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.AdapterVersionSpec":                  schema_nexustempmodule_apis_configmazingercom_v1_AdapterVersionSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.Api":                                 schema_nexustempmodule_apis_configmazingercom_v1_Api(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiBinding":                          schema_nexustempmodule_apis_configmazingercom_v1_ApiBinding(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiBindingNexusStatus":               schema_nexustempmodule_apis_configmazingercom_v1_ApiBindingNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiBindingSpec":                      schema_nexustempmodule_apis_configmazingercom_v1_ApiBindingSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiCollaborationSpace":               schema_nexustempmodule_apis_configmazingercom_v1_ApiCollaborationSpace(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiCollaborationSpaceNexusStatus":    schema_nexustempmodule_apis_configmazingercom_v1_ApiCollaborationSpaceNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiCollaborationSpaceSpec":           schema_nexustempmodule_apis_configmazingercom_v1_ApiCollaborationSpaceSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiDevSpace":                         schema_nexustempmodule_apis_configmazingercom_v1_ApiDevSpace(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiDevSpaceNexusStatus":              schema_nexustempmodule_apis_configmazingercom_v1_ApiDevSpaceNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiDevSpaceSpec":                     schema_nexustempmodule_apis_configmazingercom_v1_ApiDevSpaceSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiNexusStatus":                      schema_nexustempmodule_apis_configmazingercom_v1_ApiNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiRuntime":                          schema_nexustempmodule_apis_configmazingercom_v1_ApiRuntime(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiRuntimeNexusStatus":               schema_nexustempmodule_apis_configmazingercom_v1_ApiRuntimeNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiRuntimeSpec":                      schema_nexustempmodule_apis_configmazingercom_v1_ApiRuntimeSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiRuntimeStatus":                    schema_nexustempmodule_apis_configmazingercom_v1_ApiRuntimeStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiSpec":                             schema_nexustempmodule_apis_configmazingercom_v1_ApiSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiVersion":                          schema_nexustempmodule_apis_configmazingercom_v1_ApiVersion(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiVersionNexusStatus":               schema_nexustempmodule_apis_configmazingercom_v1_ApiVersionNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiVersionSpec":                      schema_nexustempmodule_apis_configmazingercom_v1_ApiVersionSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.Apilo":                               schema_nexustempmodule_apis_configmazingercom_v1_Apilo(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiloNexusStatus":                    schema_nexustempmodule_apis_configmazingercom_v1_ApiloNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ApiloSpec":                           schema_nexustempmodule_apis_configmazingercom_v1_ApiloSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.Branch":                              schema_nexustempmodule_apis_configmazingercom_v1_Branch(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.BuildVar":                            schema_nexustempmodule_apis_configmazingercom_v1_BuildVar(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.Child":                               schema_nexustempmodule_apis_configmazingercom_v1_Child(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.Cluster":                             schema_nexustempmodule_apis_configmazingercom_v1_Cluster(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ClusterNamespace":                    schema_nexustempmodule_apis_configmazingercom_v1_ClusterNamespace(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ClusterNexusStatus":                  schema_nexustempmodule_apis_configmazingercom_v1_ClusterNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.ClusterSpec":                         schema_nexustempmodule_apis_configmazingercom_v1_ClusterSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.DeploymentImageInfo":                 schema_nexustempmodule_apis_configmazingercom_v1_DeploymentImageInfo(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.GatewayResource":                     schema_nexustempmodule_apis_configmazingercom_v1_GatewayResource(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.GitAuth":                             schema_nexustempmodule_apis_configmazingercom_v1_GitAuth(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.GitRef":                              schema_nexustempmodule_apis_configmazingercom_v1_GitRef(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.GitRepositorySpec":                   schema_nexustempmodule_apis_configmazingercom_v1_GitRepositorySpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.GitSource":                           schema_nexustempmodule_apis_configmazingercom_v1_GitSource(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.Integration":                         schema_nexustempmodule_apis_configmazingercom_v1_Integration(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.IntegrationMapping":                  schema_nexustempmodule_apis_configmazingercom_v1_IntegrationMapping(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.IntegrationNexusStatus":              schema_nexustempmodule_apis_configmazingercom_v1_IntegrationNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.IntegrationSpec":                     schema_nexustempmodule_apis_configmazingercom_v1_IntegrationSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.LevelIndicator":                      schema_nexustempmodule_apis_configmazingercom_v1_LevelIndicator(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.Link":                                schema_nexustempmodule_apis_configmazingercom_v1_Link(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.MatchCondition":                      schema_nexustempmodule_apis_configmazingercom_v1_MatchCondition(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus":                         schema_nexustempmodule_apis_configmazingercom_v1_NexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.Source":                              schema_nexustempmodule_apis_configmazingercom_v1_Source(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.WorkloadBinding":                     schema_nexustempmodule_apis_configmazingercom_v1_WorkloadBinding(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.WorkloadBindingNexusStatus":          schema_nexustempmodule_apis_configmazingercom_v1_WorkloadBindingNexusStatus(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.WorkloadBindingSpec":                 schema_nexustempmodule_apis_configmazingercom_v1_WorkloadBindingSpec(ref),
		"nexustempmodule/apis/config.mazinger.com/v1.WorkloadMeta":                        schema_nexustempmodule_apis_configmazingercom_v1_WorkloadMeta(ref),
		"nexustempmodule/apis/consts.mazinger.com/v1.Child":                               schema_nexustempmodule_apis_constsmazingercom_v1_Child(ref),
		"nexustempmodule/apis/consts.mazinger.com/v1.Link":                                schema_nexustempmodule_apis_constsmazingercom_v1_Link(ref),
		"nexustempmodule/apis/consts.mazinger.com/v1.NexusStatus":                         schema_nexustempmodule_apis_constsmazingercom_v1_NexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Api":                              schema_nexustempmodule_apis_inventorymazingercom_v1_Api(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiCollaborationSpace":            schema_nexustempmodule_apis_inventorymazingercom_v1_ApiCollaborationSpace(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiCollaborationSpaceNexusStatus": schema_nexustempmodule_apis_inventorymazingercom_v1_ApiCollaborationSpaceNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiCollaborationSpaceSpec":        schema_nexustempmodule_apis_inventorymazingercom_v1_ApiCollaborationSpaceSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiDevSpace":                      schema_nexustempmodule_apis_inventorymazingercom_v1_ApiDevSpace(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiDevSpaceNexusStatus":           schema_nexustempmodule_apis_inventorymazingercom_v1_ApiDevSpaceNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiDevSpaceSpec":                  schema_nexustempmodule_apis_inventorymazingercom_v1_ApiDevSpaceSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiNamespace":                     schema_nexustempmodule_apis_inventorymazingercom_v1_ApiNamespace(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiNamespaceNexusStatus":          schema_nexustempmodule_apis_inventorymazingercom_v1_ApiNamespaceNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiNamespaceSpec":                 schema_nexustempmodule_apis_inventorymazingercom_v1_ApiNamespaceSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiNexusStatus":                   schema_nexustempmodule_apis_inventorymazingercom_v1_ApiNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpec":                          schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecOptions":                   schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecOptions(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecVersionStatusCondition":    schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecVersionStatusCondition(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecification":                 schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecification(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecificationNexusStatus":      schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecificationNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecificationSpec":             schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecificationSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiVersion":                       schema_nexustempmodule_apis_inventorymazingercom_v1_ApiVersion(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiVersionNexusStatus":            schema_nexustempmodule_apis_inventorymazingercom_v1_ApiVersionNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiVersionSpec":                   schema_nexustempmodule_apis_inventorymazingercom_v1_ApiVersionSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Apilo":                            schema_nexustempmodule_apis_inventorymazingercom_v1_Apilo(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiloNexusStatus":                 schema_nexustempmodule_apis_inventorymazingercom_v1_ApiloNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ApiloStatus":                      schema_nexustempmodule_apis_inventorymazingercom_v1_ApiloStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.BackstageComponent":               schema_nexustempmodule_apis_inventorymazingercom_v1_BackstageComponent(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.BackstageComponentNexusStatus":    schema_nexustempmodule_apis_inventorymazingercom_v1_BackstageComponentNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.BackstageComponentSpec":           schema_nexustempmodule_apis_inventorymazingercom_v1_BackstageComponentSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Child":                            schema_nexustempmodule_apis_inventorymazingercom_v1_Child(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Cluster":                          schema_nexustempmodule_apis_inventorymazingercom_v1_Cluster(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ClusterConnectSpec":               schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterConnectSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNamespace":                 schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterNamespace(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNamespaceNexusStatus":      schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterNamespaceNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNamespaceSpec":             schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterNamespaceSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNexusStatus":               schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ClusterSpec":                      schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ComponentSpec":                    schema_nexustempmodule_apis_inventorymazingercom_v1_ComponentSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Deployment":                       schema_nexustempmodule_apis_inventorymazingercom_v1_Deployment(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.DeploymentNexusStatus":            schema_nexustempmodule_apis_inventorymazingercom_v1_DeploymentNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Gateway":                          schema_nexustempmodule_apis_inventorymazingercom_v1_Gateway(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayAdapterSpec":               schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayAdapterSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayClass":                     schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayClass(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayClassNexusStatus":          schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayClassNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayClassSpec":                 schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayClassSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayNexusStatus":               schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayPropertiesSpec":            schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayPropertiesSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayRuntime":                   schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayRuntime(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayRuntimeNexusStatus":        schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayRuntimeNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayRuntimeSpec":               schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayRuntimeSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GatewaySpec":                      schema_nexustempmodule_apis_inventorymazingercom_v1_GatewaySpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GitConfig":                        schema_nexustempmodule_apis_inventorymazingercom_v1_GitConfig(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.GitRepositorySpec":                schema_nexustempmodule_apis_inventorymazingercom_v1_GitRepositorySpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.HTTPRoute":                        schema_nexustempmodule_apis_inventorymazingercom_v1_HTTPRoute(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.HTTPRouteNexusStatus":             schema_nexustempmodule_apis_inventorymazingercom_v1_HTTPRouteNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.HTTPRouteSpec":                    schema_nexustempmodule_apis_inventorymazingercom_v1_HTTPRouteSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Link":                             schema_nexustempmodule_apis_inventorymazingercom_v1_Link(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus":                      schema_nexustempmodule_apis_inventorymazingercom_v1_NexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.RuntimeNamespace":                 schema_nexustempmodule_apis_inventorymazingercom_v1_RuntimeNamespace(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.RuntimeNamespaceNexusStatus":      schema_nexustempmodule_apis_inventorymazingercom_v1_RuntimeNamespaceNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.RuntimeNamespaceSpec":             schema_nexustempmodule_apis_inventorymazingercom_v1_RuntimeNamespaceSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Schema":                           schema_nexustempmodule_apis_inventorymazingercom_v1_Schema(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Service":                          schema_nexustempmodule_apis_inventorymazingercom_v1_Service(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.ServiceNexusStatus":               schema_nexustempmodule_apis_inventorymazingercom_v1_ServiceNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.SpecStatus":                       schema_nexustempmodule_apis_inventorymazingercom_v1_SpecStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.Workload":                         schema_nexustempmodule_apis_inventorymazingercom_v1_Workload(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadAdapterSpec":              schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadAdapterSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadCondition":                schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadCondition(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNamespace":                schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadNamespace(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNamespaceNexusStatus":     schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadNamespaceNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNamespaceSpec":            schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadNamespaceSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNexusStatus":              schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadRuntime":                  schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadRuntime(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadRuntimeNexusStatus":       schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadRuntimeNexusStatus(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadRuntimeSpec":              schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadRuntimeSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadSpec":                     schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadSpec(ref),
		"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadStatus":                   schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.Api":                                schema_nexustempmodule_apis_runtimemazingercom_v1_Api(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiCollaborationSpace":              schema_nexustempmodule_apis_runtimemazingercom_v1_ApiCollaborationSpace(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiCollaborationSpaceNexusStatus":   schema_nexustempmodule_apis_runtimemazingercom_v1_ApiCollaborationSpaceNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiCollaborationSpaceSpec":          schema_nexustempmodule_apis_runtimemazingercom_v1_ApiCollaborationSpaceSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiDevSpace":                        schema_nexustempmodule_apis_runtimemazingercom_v1_ApiDevSpace(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiDevSpaceNexusStatus":             schema_nexustempmodule_apis_runtimemazingercom_v1_ApiDevSpaceNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiDevSpaceSpec":                    schema_nexustempmodule_apis_runtimemazingercom_v1_ApiDevSpaceSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiNamespace":                       schema_nexustempmodule_apis_runtimemazingercom_v1_ApiNamespace(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiNamespaceNexusStatus":            schema_nexustempmodule_apis_runtimemazingercom_v1_ApiNamespaceNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiNamespaceSpec":                   schema_nexustempmodule_apis_runtimemazingercom_v1_ApiNamespaceSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiNexusStatus":                     schema_nexustempmodule_apis_runtimemazingercom_v1_ApiNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpec":                            schema_nexustempmodule_apis_runtimemazingercom_v1_ApiSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpecification":                   schema_nexustempmodule_apis_runtimemazingercom_v1_ApiSpecification(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpecificationNexusStatus":        schema_nexustempmodule_apis_runtimemazingercom_v1_ApiSpecificationNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpecificationSpec":               schema_nexustempmodule_apis_runtimemazingercom_v1_ApiSpecificationSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiTest":                            schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTest(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestNexusStatus":                 schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestSpec":                        schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestStatus":                      schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestStatusNexusStatus":           schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestStatusNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestStatusSpec":                  schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestStatusSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiVersion":                         schema_nexustempmodule_apis_runtimemazingercom_v1_ApiVersion(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiVersionNexusStatus":              schema_nexustempmodule_apis_runtimemazingercom_v1_ApiVersionNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ApiVersionSpec":                     schema_nexustempmodule_apis_runtimemazingercom_v1_ApiVersionSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.BuildVar":                           schema_nexustempmodule_apis_runtimemazingercom_v1_BuildVar(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.Child":                              schema_nexustempmodule_apis_runtimemazingercom_v1_Child(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.Cluster":                            schema_nexustempmodule_apis_runtimemazingercom_v1_Cluster(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNamespace":                   schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterNamespace(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNamespaceNexusStatus":        schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterNamespaceNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNamespaceSpec":               schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterNamespaceSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNexusStatus":                 schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ClusterSpec":                        schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ContractTest":                       schema_nexustempmodule_apis_runtimemazingercom_v1_ContractTest(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ContractTestNexusStatus":            schema_nexustempmodule_apis_runtimemazingercom_v1_ContractTestNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ContractTestSpec":                   schema_nexustempmodule_apis_runtimemazingercom_v1_ContractTestSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.ExecutionSummary":                   schema_nexustempmodule_apis_runtimemazingercom_v1_ExecutionSummary(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.Gateway":                            schema_nexustempmodule_apis_runtimemazingercom_v1_Gateway(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.GatewayNexusStatus":                 schema_nexustempmodule_apis_runtimemazingercom_v1_GatewayNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.GatewayReference":                   schema_nexustempmodule_apis_runtimemazingercom_v1_GatewayReference(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.GatewaySpec":                        schema_nexustempmodule_apis_runtimemazingercom_v1_GatewaySpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.GitRef":                             schema_nexustempmodule_apis_runtimemazingercom_v1_GitRef(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.GitSource":                          schema_nexustempmodule_apis_runtimemazingercom_v1_GitSource(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.Link":                               schema_nexustempmodule_apis_runtimemazingercom_v1_Link(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.MetricMonitor":                      schema_nexustempmodule_apis_runtimemazingercom_v1_MetricMonitor(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.MetricMonitorNexusStatus":           schema_nexustempmodule_apis_runtimemazingercom_v1_MetricMonitorNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.MetricMonitorSpec":                  schema_nexustempmodule_apis_runtimemazingercom_v1_MetricMonitorSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus":                        schema_nexustempmodule_apis_runtimemazingercom_v1_NexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.Source":                             schema_nexustempmodule_apis_runtimemazingercom_v1_Source(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.Status":                             schema_nexustempmodule_apis_runtimemazingercom_v1_Status(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.Workload":                           schema_nexustempmodule_apis_runtimemazingercom_v1_Workload(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadMeta":                       schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadMeta(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNamespace":                  schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadNamespace(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNamespaceNexusStatus":       schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadNamespaceNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNamespaceSpec":              schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadNamespaceSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNexusStatus":                schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadNexusStatus(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadSpec":                       schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadSpec(ref),
		"nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadStatus":                     schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadStatus(ref),
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_Config(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.ConfigSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.ConfigNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/apix.mazinger.com/v1.ConfigNexusStatus", "nexustempmodule/apis/apix.mazinger.com/v1.ConfigSpec"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_ConfigNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_ConfigSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiCollaborationSpacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"integrationsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"clustersGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"adaptersGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_Inventory(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.InventorySpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.InventoryNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/apix.mazinger.com/v1.InventoryNexusStatus", "nexustempmodule/apis/apix.mazinger.com/v1.InventorySpec"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_InventoryNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_InventorySpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"clustersGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"apiCollaborationSpacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_Project(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.ProjectSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.ProjectNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/apix.mazinger.com/v1.ProjectNexusStatus", "nexustempmodule/apis/apix.mazinger.com/v1.ProjectSpec"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_ProjectNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_ProjectSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"configGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
						},
					},
					"inventoryGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
						},
					},
					"runtimeGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_Root(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.RootSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.RootNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/apix.mazinger.com/v1.RootNexusStatus", "nexustempmodule/apis/apix.mazinger.com/v1.RootSpec"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_RootNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_RootSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"projectsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_Runtime(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.RuntimeSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.RuntimeNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/apix.mazinger.com/v1.RuntimeNexusStatus", "nexustempmodule/apis/apix.mazinger.com/v1.RuntimeSpec"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_RuntimeNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_apixmazingercom_v1_RuntimeSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"clustersGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"apiCollaborationSpacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/apix.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/apix.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_commonmazingercom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_commonmazingercom_v1_Header(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Key": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"MatchType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Key", "Value", "MatchType"},
			},
		},
	}
}

func schema_nexustempmodule_apis_commonmazingercom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_commonmazingercom_v1_Listener(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"SectionName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"HostName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Port": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"ProtocolType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"SectionName", "HostName", "Port", "ProtocolType"},
			},
		},
	}
}

func schema_nexustempmodule_apis_commonmazingercom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_commonmazingercom_v1_Path(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Path": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"MatchType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Path", "MatchType"},
			},
		},
	}
}

func schema_nexustempmodule_apis_commonmazingercom_v1_Route(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Hosts": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"Protocols": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"Paths": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/common.mazinger.com/v1.Path"),
									},
								},
							},
						},
					},
					"Methods": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"Headers": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/common.mazinger.com/v1.Header"),
									},
								},
							},
						},
					},
					"Targets": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/common.mazinger.com/v1.Target"),
									},
								},
							},
						},
					},
					"StripPath": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
				},
				Required: []string{"Hosts", "Protocols", "Paths", "Methods", "Headers", "Targets", "StripPath"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/common.mazinger.com/v1.Header", "nexustempmodule/apis/common.mazinger.com/v1.Path", "nexustempmodule/apis/common.mazinger.com/v1.Target"},
	}
}

func schema_nexustempmodule_apis_commonmazingercom_v1_Target(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"TargetType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Target": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Port": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"TargetType", "Target", "Port"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_Adapter(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.AdapterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.AdapterNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.AdapterNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.AdapterSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_AdapterNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_AdapterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"adapterVersionsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"type"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_AdapterVersion(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.AdapterVersionSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.AdapterVersionNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.AdapterVersionNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.AdapterVersionSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_AdapterVersionNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_AdapterVersionSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"version": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"deployment": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.DeploymentImageInfo"),
						},
					},
					"isLatest": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
				},
				Required: []string{"version", "deployment", "isLatest"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.DeploymentImageInfo"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_Api(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.ApiNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.ApiSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiBinding(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiBindingSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiBindingNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.ApiBindingNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.ApiBindingSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiBindingNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiBindingSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"routes": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/common.mazinger.com/v1.Route"),
									},
								},
							},
						},
					},
					"apilos": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"apiRuntimeGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Link"),
						},
					},
				},
				Required: []string{"routes", "apilos"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/common.mazinger.com/v1.Route", "nexustempmodule/apis/config.mazinger.com/v1.Link"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiCollaborationSpace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiCollaborationSpaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiCollaborationSpaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.ApiCollaborationSpaceNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.ApiCollaborationSpaceSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiCollaborationSpaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiCollaborationSpaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"integrationMapping": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.IntegrationMapping"),
									},
								},
							},
						},
					},
					"apiDevSpacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"apisGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"apiRuntimesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"apilosGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"description", "integrationMapping"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.Child", "nexustempmodule/apis/config.mazinger.com/v1.IntegrationMapping"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiDevSpace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiDevSpaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiDevSpaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.ApiDevSpaceNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.ApiDevSpaceSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiDevSpaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiDevSpaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiSpecificationSource": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gitConfig": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.GitRepositorySpec"),
						},
					},
				},
				Required: []string{"description", "apiSpecificationSource", "gitConfig"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.GitRepositorySpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiRuntime(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiRuntimeSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiRuntimeNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.ApiRuntimeNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.ApiRuntimeSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiRuntimeNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiRuntimeStatus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiRuntimeStatus"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.ApiRuntimeStatus", "nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiRuntimeSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"isAutoGenerated": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"clusterNamespaces": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ClusterNamespace"),
									},
								},
							},
						},
					},
					"gatewayResourceName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gatewayNamespaceName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gatewayResource": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.GatewayResource"),
									},
								},
							},
						},
					},
				},
				Required: []string{"description", "isAutoGenerated", "clusterNamespaces", "gatewayResourceName", "gatewayNamespaceName", "gatewayResource"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.ClusterNamespace", "nexustempmodule/apis/config.mazinger.com/v1.GatewayResource"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiRuntimeStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"IsValid": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
				},
				Required: []string{"IsValid"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiPattern": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiVersionsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"description", "apiPattern"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiVersion(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiVersionSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiVersionNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.ApiVersionNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.ApiVersionSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiVersionNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiVersionSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"version": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"routePrefix": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiBindingsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"workloadBindingsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"apiSpecVersionGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Link"),
						},
					},
				},
				Required: []string{"version", "routePrefix"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.Child", "nexustempmodule/apis/config.mazinger.com/v1.Link"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_Apilo(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiloSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ApiloNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.ApiloNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.ApiloSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiloNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ApiloSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"levelIndicators": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.LevelIndicator"),
									},
								},
							},
						},
					},
					"loTarget": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"number"},
							Format: "double",
						},
					},
					"compliancePeriod": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiBindingsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Link"),
									},
								},
							},
						},
					},
				},
				Required: []string{"levelIndicators", "loTarget", "compliancePeriod"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.LevelIndicator", "nexustempmodule/apis/config.mazinger.com/v1.Link"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_Branch(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"isPrimary": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
				},
				Required: []string{"name", "isPrimary"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_BuildVar(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_Cluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ClusterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.ClusterNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.ClusterNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.ClusterSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ClusterNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Cluster": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.MatchCondition"),
						},
					},
					"Namespace": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.MatchCondition"),
						},
					},
				},
				Required: []string{"Cluster", "Namespace"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.MatchCondition"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ClusterNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_ClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"host": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"port": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"host", "port"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_DeploymentImageInfo(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"ImageRepo": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"ImageName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"ImageVersion": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"ImageRepo", "ImageName", "ImageVersion"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_GatewayResource(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Cluster": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"GatewayClass": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Listeners": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/common.mazinger.com/v1.Listener"),
									},
								},
							},
						},
					},
				},
				Required: []string{"Cluster", "GatewayClass", "Listeners"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/common.mazinger.com/v1.Listener"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_GitAuth(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"authType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"username": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"password": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"authType", "username", "password"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_GitRef(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Branch": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Tag": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Commit": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Branch", "Tag", "Commit"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_GitRepositorySpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"integrationName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"url": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"branches": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Branch"),
									},
								},
							},
						},
					},
					"filePath": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"refFilePaths": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
				},
				Required: []string{"integrationName", "url", "branches", "filePath"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.Branch"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_GitSource(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"URL": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Ref": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.GitRef"),
						},
					},
				},
				Required: []string{"URL", "Ref"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.GitRef"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_Integration(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.IntegrationSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.IntegrationNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.IntegrationNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.IntegrationSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_IntegrationMapping(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"integrationName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"subGroup": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"integrationName", "group"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_IntegrationNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_IntegrationSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"integrationType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gitAuth": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.GitAuth"),
						},
					},
				},
				Required: []string{"integrationType", "gitAuth"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.GitAuth"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_LevelIndicator(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"MetricName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"number"},
							Format: "double",
						},
					},
				},
				Required: []string{"MetricName", "Value"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_MatchCondition(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Name", "Type"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_Source(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Git": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.GitSource"),
						},
					},
					"Image": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Git", "Image"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.GitSource"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_WorkloadBinding(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.WorkloadBindingSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.WorkloadBindingNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/config.mazinger.com/v1.WorkloadBindingNexusStatus", "nexustempmodule/apis/config.mazinger.com/v1.WorkloadBindingSpec"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_WorkloadBindingNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_WorkloadBindingSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Source": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Source"),
						},
					},
					"build": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.BuildVar"),
									},
								},
							},
						},
					},
					"meta": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.WorkloadMeta"),
						},
					},
					"apiRuntimeGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/config.mazinger.com/v1.Link"),
						},
					},
				},
				Required: []string{"Source"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/config.mazinger.com/v1.BuildVar", "nexustempmodule/apis/config.mazinger.com/v1.Link", "nexustempmodule/apis/config.mazinger.com/v1.Source", "nexustempmodule/apis/config.mazinger.com/v1.WorkloadMeta"},
	}
}

func schema_nexustempmodule_apis_configmazingercom_v1_WorkloadMeta(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"labels": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
				},
			},
		},
	}
}

func schema_nexustempmodule_apis_constsmazingercom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_constsmazingercom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_constsmazingercom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Api(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiCollaborationSpace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiCollaborationSpaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiCollaborationSpaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiCollaborationSpaceNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiCollaborationSpaceSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiCollaborationSpaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiCollaborationSpaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiDevSpacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"apilosGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiDevSpace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiDevSpaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiDevSpaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiDevSpaceNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiDevSpaceSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiDevSpaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiDevSpaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiSpecificationSource": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiSpecificationName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gitConfig": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GitRepositorySpec"),
						},
					},
					"gitIssues": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"branchesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"description", "apiSpecificationSource", "apiSpecificationName", "gitConfig"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Child", "nexustempmodule/apis/inventory.mazinger.com/v1.GitRepositorySpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiNamespaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiNamespaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiNamespaceNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiNamespaceSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiNamespaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiNamespaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiCollaborationSpace": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiRuntime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apisGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"apiCollaborationSpace", "apiRuntime"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiPattern": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiVersionsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"description", "apiPattern"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecOptions(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"isPrimary": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"publishApi": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
				},
				Required: []string{"isPrimary", "publishApi"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecVersionStatusCondition(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Status": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"Reason": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Message": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Type", "Status", "Reason", "Message"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecification(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecificationSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecificationNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecificationNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecificationSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecificationNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"specStatus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.SpecStatus"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.SpecStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiSpecificationSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"catalogName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"title": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"version": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"schema": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Schema"),
						},
					},
					"apiSpecOptions": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecOptions"),
						},
					},
					"contentUrl": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gitConfig": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GitConfig"),
						},
					},
					"allowEdits": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
				},
				Required: []string{"catalogName", "description", "title", "version", "schema", "apiSpecOptions", "contentUrl", "allowEdits"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecOptions", "nexustempmodule/apis/inventory.mazinger.com/v1.GitConfig", "nexustempmodule/apis/inventory.mazinger.com/v1.Schema"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiVersion(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiVersionSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiVersionNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiVersionNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiVersionSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiVersionNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiVersionSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"version": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"routePrefix": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"version", "routePrefix"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Apilo(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiloNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ApiloNexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiloNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiloStatus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiloStatus"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.ApiloStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ApiloStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"RemainingErrorBudget": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"number"},
							Format: "double",
						},
					},
					"LastUpdateTime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"RemainingErrorBudget", "LastUpdateTime"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_BackstageComponent(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.BackstageComponentSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.BackstageComponentNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.BackstageComponentNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.BackstageComponentSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_BackstageComponentNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_BackstageComponentSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"componentSpec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ComponentSpec"),
						},
					},
				},
				Required: []string{"componentSpec"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.ComponentSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Cluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ClusterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.ClusterSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterConnectSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"AccessToken": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"NexusEndpointName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"AccessToken", "NexusEndpointName"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNamespaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNamespaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNamespaceNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.ClusterNamespaceSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterNamespaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterNamespaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"gatewaysGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"gatewayClassesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"backstageComponentsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"servicesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"deploymentsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"hTTPRoutesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"clusterConnectSpec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ClusterConnectSpec"),
						},
					},
					"clusterNamespacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"runtimeNamespacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"apiNamespacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"workloadNamespacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"clusterConnectSpec"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Child", "nexustempmodule/apis/inventory.mazinger.com/v1.ClusterConnectSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ComponentSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Lifecycle": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Owner": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"SubComponentOf": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"ProvidesAPIs": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"ConsumesAPIs": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"DependsOn": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"System": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Type", "Lifecycle", "Owner", "SubComponentOf", "ProvidesAPIs", "ConsumesAPIs", "DependsOn", "System"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Deployment(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.DeploymentNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.DeploymentNexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_DeploymentNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Gateway(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GatewaySpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GatewayNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.GatewayNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.GatewaySpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayAdapterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Service": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Port": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"Ssl": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
				},
				Required: []string{"Service", "Port", "Ssl"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayClass(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GatewayClassSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GatewayClassNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.GatewayClassNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.GatewayClassSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayClassNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayClassSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gatewayControllerName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"description", "gatewayControllerName"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayPropertiesSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Key": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Key", "Value"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayRuntime(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GatewayRuntimeSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GatewayRuntimeNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.GatewayRuntimeNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.GatewayRuntimeSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayRuntimeNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewayRuntimeSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gatewayUniqueIdentifier": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gatewayProperties": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GatewayPropertiesSpec"),
									},
								},
							},
						},
					},
					"gatewayAdapter": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.GatewayAdapterSpec"),
						},
					},
				},
				Required: []string{"type", "gatewayUniqueIdentifier", "gatewayProperties", "gatewayAdapter"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.GatewayAdapterSpec", "nexustempmodule/apis/inventory.mazinger.com/v1.GatewayPropertiesSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GatewaySpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"gatewayClassName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiRuntimesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Link"),
									},
								},
							},
						},
					},
				},
				Required: []string{"gatewayClassName"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Link"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GitConfig(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"fileName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"refFileNames": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"fluxGitRepository": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"commitIDSha": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"fluxGitRepository", "commitIDSha"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_GitRepositorySpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"url": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"filePath": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"url", "filePath"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_HTTPRoute(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.HTTPRouteSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.HTTPRouteNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.HTTPRouteNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.HTTPRouteSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_HTTPRouteNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_HTTPRouteSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"HTTPRouteSpec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("sigs.k8s.io/gateway-api/apis/v1beta1.HTTPRouteSpec"),
						},
					},
					"HTTPRouteStatus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("sigs.k8s.io/gateway-api/apis/v1beta1.HTTPRouteStatus"),
						},
					},
					"apiSpecificationsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Link"),
									},
								},
							},
						},
					},
				},
				Required: []string{"HTTPRouteSpec", "HTTPRouteStatus"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Link", "sigs.k8s.io/gateway-api/apis/v1beta1.HTTPRouteSpec", "sigs.k8s.io/gateway-api/apis/v1beta1.HTTPRouteStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_RuntimeNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.RuntimeNamespaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.RuntimeNamespaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.RuntimeNamespaceNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.RuntimeNamespaceSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_RuntimeNamespaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_RuntimeNamespaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gatewayRuntimeGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
						},
					},
					"workloadRuntimeGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
						},
					},
				},
				Required: []string{"type"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Schema(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"version": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"format": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"type", "version", "format"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Service(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ServiceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.ServiceNexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_ServiceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_SpecStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Status": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"Phase": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Conditions": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecVersionStatusCondition"),
									},
								},
							},
						},
					},
				},
				Required: []string{"Status", "Phase", "Conditions"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.ApiSpecVersionStatusCondition"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_Workload(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadAdapterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Service": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Port": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"Ssl": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
				},
				Required: []string{"Service", "Port", "Ssl"},
			},
		},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadCondition(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"LastUpdateTime": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.Time"),
						},
					},
					"LastTransitionTime": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.Time"),
						},
					},
					"Reason": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Message": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Type", "LastUpdateTime", "LastTransitionTime", "Reason", "Message"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.Time"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNamespaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNamespaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNamespaceNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadNamespaceSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadNamespaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadNamespaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiCollaborationSpace": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiRuntime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"workloadsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"apiCollaborationSpace", "apiRuntime"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadRuntime(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadRuntimeSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadRuntimeNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadRuntimeNexusStatus", "nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadRuntimeSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadRuntimeNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadRuntimeSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"workloadUniqueIdentifier": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"workloadAdapter": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadAdapterSpec"),
						},
					},
				},
				Required: []string{"workloadUniqueIdentifier", "workloadAdapter"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadAdapterSpec"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadStatus"),
						},
					},
				},
				Required: []string{"status"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadStatus"},
	}
}

func schema_nexustempmodule_apis_inventorymazingercom_v1_WorkloadStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"ObservedGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"Conditions": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadCondition"),
									},
								},
							},
						},
					},
				},
				Required: []string{"ObservedGeneration", "Conditions"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/inventory.mazinger.com/v1.WorkloadCondition"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_Api(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiCollaborationSpace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiCollaborationSpaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiCollaborationSpaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiCollaborationSpaceNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiCollaborationSpaceSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiCollaborationSpaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiCollaborationSpaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiDevSpacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiDevSpace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiDevSpaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiDevSpaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiDevSpaceNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiDevSpaceSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiDevSpaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiDevSpaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"branchesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiNamespaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiNamespaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiNamespaceNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiNamespaceSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiNamespaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiNamespaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiCollaborationSpace": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiRuntime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"runtimeNamespace": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"namespaceType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apisGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"apiCollaborationSpace", "apiRuntime", "runtimeNamespace", "namespaceType"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiPattern": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiVersionsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"description", "apiPattern"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiSpecification(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpecificationSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpecificationNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpecificationNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiSpecificationSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiSpecificationNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiSpecificationSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiTestGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTest(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"contractTestsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestStatusSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestStatusNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestStatusNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiTestStatusSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestStatusNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiTestStatusSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ExecutionSummary"),
						},
					},
				},
				Required: []string{"status"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.ExecutionSummary"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiVersion(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiVersionSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ApiVersionNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiVersionNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ApiVersionSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiVersionNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Status"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.Status"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ApiVersionSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"apiPattern": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"version": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"routePrefix": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"routes": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/common.mazinger.com/v1.Route"),
									},
								},
							},
						},
					},
					"adapterUrl": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"gatewayResourceName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"targetApiNamespace": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"metricMonitorsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"apiName", "apiPattern", "version", "routePrefix", "routes", "adapterUrl", "gatewayResourceName", "targetApiNamespace"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/common.mazinger.com/v1.Route", "nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_BuildVar(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_Child(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_Cluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ClusterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ClusterSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNamespaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNamespaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNamespaceNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ClusterNamespaceSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterNamespaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterNamespaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"gatewaysGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"apiNamespacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"workloadNamespacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
					"clusterNamespacesGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ContractTest(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ContractTestSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.ContractTestNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.ContractTestNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.ContractTestSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ContractTestNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ContractTestSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"description": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"providerS3URIs": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"consumerS3URI": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"statusGvk": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
						},
					},
				},
				Required: []string{"description", "providerS3URIs", "consumerS3URI"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_ExecutionSummary(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"StartTime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"EndTime": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Duration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Status": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Output": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"ErrorMessage": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"StartTime", "EndTime", "Duration", "Status", "Output", "ErrorMessage"},
			},
		},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_Gateway(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.GatewaySpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.GatewayNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.GatewayNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.GatewaySpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_GatewayNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_GatewayReference(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Cluster": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Namespace": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Cluster", "Namespace"},
			},
		},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_GatewaySpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"gatewayClassName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"listeners": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/common.mazinger.com/v1.Listener"),
									},
								},
							},
						},
					},
				},
				Required: []string{"gatewayClassName", "listeners"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/common.mazinger.com/v1.Listener"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_GitRef(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Branch": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Tag": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Commit": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Branch", "Tag", "Commit"},
			},
		},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_GitSource(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"URL": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Ref": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.GitRef"),
						},
					},
				},
				Required: []string{"URL", "Ref"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.GitRef"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_Link(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"kind": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"group", "kind", "name"},
			},
		},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_MetricMonitor(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.MetricMonitorSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.MetricMonitorNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.MetricMonitorNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.MetricMonitorSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_MetricMonitorNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_MetricMonitorSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"metricNames": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"gatewayReference": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.GatewayReference"),
						},
					},
					"routes": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/common.mazinger.com/v1.Route"),
									},
								},
							},
						},
					},
				},
				Required: []string{"metricNames", "gatewayReference", "routes"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/common.mazinger.com/v1.Route", "nexustempmodule/apis/runtime.mazinger.com/v1.GatewayReference"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"sourceGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"remoteGeneration": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
				},
				Required: []string{"sourceGeneration", "remoteGeneration"},
			},
		},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_Source(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Git": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.GitSource"),
						},
					},
					"Image": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Git", "Image"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.GitSource"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_Status(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"State": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Message": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"State", "Message"},
			},
		},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_Workload(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadMeta(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"labels": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
				},
			},
		},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNamespaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNamespaceNexusStatus"),
						},
					},
				},
				Required: []string{"metadata"},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNamespaceNexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadNamespaceSpec"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadNamespaceNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadNamespaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"runtimeNamespace": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"namespaceType": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"workloadsGvk": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Child"),
									},
								},
							},
						},
					},
				},
				Required: []string{"runtimeNamespace", "namespaceType"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.Child"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadNexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadStatus"),
						},
					},
					"nexus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.NexusStatus", "nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadStatus"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"Source": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.Source"),
						},
					},
					"build": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.BuildVar"),
									},
								},
							},
						},
					},
					"meta": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadMeta"),
						},
					},
					"adapterUrl": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"targetWorkloadNamespace": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"Source", "adapterUrl", "targetWorkloadNamespace"},
			},
		},
		Dependencies: []string{
			"nexustempmodule/apis/runtime.mazinger.com/v1.BuildVar", "nexustempmodule/apis/runtime.mazinger.com/v1.Source", "nexustempmodule/apis/runtime.mazinger.com/v1.WorkloadMeta"},
	}
}

func schema_nexustempmodule_apis_runtimemazingercom_v1_WorkloadStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"State": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"Message": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"State", "Message"},
			},
		},
	}
}
