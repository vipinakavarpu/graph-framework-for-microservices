//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Intentionally left empty

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package openapi

import (
	"gitlab.eng.vmware.com/nsx-allspark_users/nexus-sdk/kube-openapi.git/pkg/common"
	"gitlab.eng.vmware.com/nsx-allspark_users/nexus-sdk/kube-openapi.git/pkg/validation/spec"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.Bar":               schema_pkg_openapi_generator_test_data_proto_Bar(ref),
		"github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.Foo":               schema_pkg_openapi_generator_test_data_proto_Foo(ref),
		"github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.Foo_NestedMessage": schema_pkg_openapi_generator_test_data_proto_Foo_NestedMessage(ref),
		"github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/test.it/v1.FooWrapper":   schema_openapi_generator_test_data_testit_v1_FooWrapper(ref),
	}
}

func schema_pkg_openapi_generator_test_data_proto_Bar(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"enum_value": {
						SchemaProps: spec.SchemaProps{
							Description: "Mesh7CodeGenOpenAPIEnum",
							Type:        []string{"integer"},
							Format:      "int32",
						},
					},
					"OneofValue": {
						SchemaProps: spec.SchemaProps{
							Description: "Types that are valid to be assigned to OneofValue:\n\t*Bar_OneofValueString\n\t*Bar_OneofValueInt",
							Ref:         ref("github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.isBar_OneofValue"),
						},
					},
				},
				Required: []string{"OneofValue"},
			},
		},
		Dependencies: []string{
			"github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.isBar_OneofValue"},
	}
}

func schema_pkg_openapi_generator_test_data_proto_Foo(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"double_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"number"},
							Format: "double",
						},
					},
					"float_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"number"},
							Format: "float",
						},
					},
					"int32_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"int64_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"uint32_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"uint64_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"sint32_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"sint64_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"fixed32_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"fixed64_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"sfixed32_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"sfixed64_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int64",
						},
					},
					"bool_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"string_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"bytes_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "byte",
						},
					},
					"enum_value": {
						SchemaProps: spec.SchemaProps{
							Description: "Mesh7CodeGenOpenAPIEnum",
							Type:        []string{"integer"},
							Format:      "int32",
						},
					},
					"nested_enum_value": {
						SchemaProps: spec.SchemaProps{
							Description: "Mesh7CodeGenOpenAPIEnum",
							Type:        []string{"integer"},
							Format:      "int32",
						},
					},
					"nested_message": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.Foo_NestedMessage"),
						},
					},
					"OneofValue": {
						SchemaProps: spec.SchemaProps{
							Description: "Types that are valid to be assigned to OneofValue:\n\t*Foo_OneofValueString\n\t*Foo_OneofValueInt",
							Ref:         ref("github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.isFoo_OneofValue"),
						},
					},
					"map_value": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Default: "",
										Type:    []string{"string"},
										Format:  "",
									},
								},
							},
						},
					},
					"repeated_value": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Default: 0,
										Type:    []string{"integer"},
										Format:  "int32",
									},
								},
							},
						},
					},
					"bar_value": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.Bar"),
						},
					},
				},
				Required: []string{"OneofValue"},
			},
		},
		Dependencies: []string{
			"github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.Bar", "github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.Foo_NestedMessage", "github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.isFoo_OneofValue"},
	}
}

func schema_pkg_openapi_generator_test_data_proto_Foo_NestedMessage(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nested_message_value": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
	}
}

func schema_openapi_generator_test_data_testit_v1_FooWrapper(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"foo": {
						SchemaProps: spec.SchemaProps{
							Default: map[string]interface{}{},
							Ref:     ref("github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.Foo"),
						},
					},
				},
				Required: []string{"foo"},
			},
		},
		Dependencies: []string{
			"github.com/vmware-tanzu/graph-framework-for-microservices/compiler/pkg/openapi_generator/test_data/proto.Foo"},
	}
}
