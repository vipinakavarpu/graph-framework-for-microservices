
type Query {
    root: root_Root
}
 
type root_Root {

    Id: ID
    queryServiceTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        Groupby: String
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceVersionTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceTS(
        svcMetric: String
        startTime: String
        endTime: String
        timeInterval: String
    ): TimeSeriesData
    queryIncomingAPIs(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryOutgoingAPIs(
        startTime: String
        endTime: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryIncomingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryOutgoingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryServiceTopology(
        metricStringArray: String
        startTime: String
        endTime: String
    ): TimeSeriesData

    Config: config_Config!
    DisplayName: String
    CustomBar: root_Bar
}


 
type root_Bar {

    Name: String
}


 
type config_Config {

    Id: ID
    queryServiceTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        Groupby: String
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceVersionTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceTS(
        svcMetric: String
        startTime: String
        endTime: String
        timeInterval: String
    ): TimeSeriesData
    queryIncomingAPIs(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryOutgoingAPIs(
        startTime: String
        endTime: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryIncomingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryOutgoingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryServiceTopology(
        metricStringArray: String
        startTime: String
        endTime: String
    ): TimeSeriesData

    GNS: gns_Gns!
    ConfigName: String
    Cluster: config_Cluster
    FooA: String
    FooMap: String
    FooB: [String]!
    FooD: String
    XYZPort: [gns_Description]!
    ABCHost: [String]!
    ClusterNamespaces: [config_ClusterNamespace]!
}


 
type config_ClusterNamespace {

    Cluster: config_MatchCondition
    Namespace: config_MatchCondition
}


 
type config_MatchCondition {

    Name: String
    Type: String
}


 
type config_Cluster {

    Name: String
    MyID: Int
}


 
type gns_HostPort {

    Host: String
    Port: Int
}


 
type gns_Gns {

    Id: ID
    queryServiceTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        Groupby: String
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceVersionTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceTS(
        svcMetric: String
        startTime: String
        endTime: String
        timeInterval: String
    ): TimeSeriesData
    queryIncomingAPIs(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryOutgoingAPIs(
        startTime: String
        endTime: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryIncomingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryOutgoingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryServiceTopology(
        metricStringArray: String
        startTime: String
        endTime: String
    ): TimeSeriesData

    FooLink: gns_Bar!
    FooLinks(Id: ID): [gns_Bar!]
    FooChild: gns_Bar!
    FooChildren(Id: ID): [gns_Bar!]
    Domain: String
    UseSharedGateway: Boolean
    Mydesc: gns_Description
    HostPort: gns_HostPort
    TestArray: gns_EmptyData
    Instance: Float
    Array1: [Int]!
    Array2: [gns_Description]!
    Array3: [gns_Bar]!
    Array4: [Float]!
    Array5: [Int]!
}


 
type gns_Description {

    Color: String
    Version: String
    Instance: Float
    HostPort: gns_HostPort
}


 
type gns_Bar {

    Id: ID
    queryServiceTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        Groupby: String
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceVersionTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceTS(
        svcMetric: String
        startTime: String
        endTime: String
        timeInterval: String
    ): TimeSeriesData
    queryIncomingAPIs(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryOutgoingAPIs(
        startTime: String
        endTime: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryIncomingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryOutgoingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryServiceTopology(
        metricStringArray: String
        startTime: String
        endTime: String
    ): TimeSeriesData

    Name: [String]!
}


 
type gns_EmptyData {

    Id: ID
    queryServiceTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        Groupby: String
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceVersionTable(
        startTime: String
        endTime: String
        SystemServices: Boolean
        ShowGateways: Boolean
        noMetrics: Boolean
    ): TimeSeriesData
    queryServiceTS(
        svcMetric: String
        startTime: String
        endTime: String
        timeInterval: String
    ): TimeSeriesData
    queryIncomingAPIs(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryOutgoingAPIs(
        startTime: String
        endTime: String
        timeInterval: String
        timeZone: String
    ): TimeSeriesData
    queryIncomingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryOutgoingTCP(
        startTime: String
        endTime: String
        destinationService: String
        destinationServiceVersion: String
    ): TimeSeriesData
    queryServiceTopology(
        metricStringArray: String
        startTime: String
        endTime: String
    ): TimeSeriesData

}


 
type gns_Answer {

    Name: String
}


type TimeSeriesData {
  Code: Int
  Message: String
  Data: String
  Last: String
  TotalRecords: Int
}
