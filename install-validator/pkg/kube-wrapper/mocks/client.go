// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mock_kubernetes is a generated GoMock package.
package mock_kubernetes

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

// MockClientInt is a mock of ClientInt interface.
type MockClientInt struct {
	ctrl     *gomock.Controller
	recorder *MockClientIntMockRecorder
}

// MockClientIntMockRecorder is the mock recorder for MockClientInt.
type MockClientIntMockRecorder struct {
	mock *MockClientInt
}

// NewMockClientInt creates a new mock instance.
func NewMockClientInt(ctrl *gomock.Controller) *MockClientInt {
	mock := &MockClientInt{ctrl: ctrl}
	mock.recorder = &MockClientIntMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientInt) EXPECT() *MockClientIntMockRecorder {
	return m.recorder
}

// ApplyCrd mocks base method.
func (m *MockClientInt) ApplyCrd(crd v1.CustomResourceDefinition) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApplyCrd", crd)
	ret0, _ := ret[0].(error)
	return ret0
}

// ApplyCrd indicates an expected call of ApplyCrd.
func (mr *MockClientIntMockRecorder) ApplyCrd(crd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyCrd", reflect.TypeOf((*MockClientInt)(nil).ApplyCrd), crd)
}

// GetCrd mocks base method.
func (m *MockClientInt) GetCrd(name string) *v1.CustomResourceDefinition {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCrd", name)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	return ret0
}

// GetCrd indicates an expected call of GetCrd.
func (mr *MockClientIntMockRecorder) GetCrd(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCrd", reflect.TypeOf((*MockClientInt)(nil).GetCrd), name)
}

// ListCrds mocks base method.
func (m *MockClientInt) ListCrds() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCrds")
	ret0, _ := ret[0].(error)
	return ret0
}

// ListCrds indicates an expected call of ListCrds.
func (mr *MockClientIntMockRecorder) ListCrds() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCrds", reflect.TypeOf((*MockClientInt)(nil).ListCrds))
}

// ListResources mocks base method.
func (m *MockClientInt) ListResources(crd v1.CustomResourceDefinition) ([]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResources", crd)
	ret0, _ := ret[0].([]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResources indicates an expected call of ListResources.
func (mr *MockClientIntMockRecorder) ListResources(crd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResources", reflect.TypeOf((*MockClientInt)(nil).ListResources), crd)
}
